// above bootstrap modal
$ember-basic-dropdown-content-z-index: $zindex-modal+1;

$ember-power-select-border-color: $input-border;
$ember-power-select-border-width: 1px;
$ember-power-select-number-of-visible-options: 10;
$ember-power-select-background-color: $input-bg;
$ember-power-select-highlighted-background: $color-one-light-blue;
$ember-power-select-highlighted-color: $main-text-color;
$ember-power-select-trigger-default-border-radius: $input-border-radius;
$ember-power-select-trigger-ltr-padding: $padding-base-vertical;
$ember-power-select-line-height: $line-height-computed;
$ember-power-select-opened-border-radius: 0;
$ember-power-select-dropdown-default-border-radius: $input-border-radius;
$ember-power-select-selected-background: $ember-power-select-background-color;
$ember-power-select-option-large-padding-horizontal: $padding-large-horizontal;
$ember-power-select-option-small-padding-horizontal: 0.8em;
$ember-power-select-option-small-padding-vertical: $padding-small-vertical + $ember-power-select-border-width;
$ember-power-select-option-small-padding: $ember-power-select-option-small-padding-vertical $ember-power-select-option-small-padding-horizontal;

@import 'ember-power-select';
@import 'ember-power-select/themes/bootstrap';

.ember-power-select-selected-item, .ember-power-select-placeholder {
  margin-left: 0;
}

.ember-power-select-selected-item, .ember-basic-dropdown-content {
  .option-container {
    position: relative;

    .one-icon {
      @include absolute-align-middle-center();
      font-size: 2.2em;

      // Experimental space icon scale change. If everything will look good,
      // the space icon could be scaled down.
      &.oneicon-space {
        font-size: 1.8em;
      }
    }
  }
}

.ember-basic-dropdown-content {
  .option-container {
    .one-icon {
      left: 11px;
    }
    .one-icon + .text {
      padding-left: 34px;
    }
  }

  &.small {
    .one-icon + .text {
      padding-left: 2.2em;
    }
    // see .ember-power-select-trigger.small.text-like
    &.text-like {
      font-size: inherit;
    }
  }
}

.ember-power-select-trigger {
  .ember-power-select-selected-item .option-container {
    .one-icon {
      left: 5px;
    }
    .one-icon + .text {
      padding-left: 28px;
    }
  }

  &.small {
    .ember-power-select-selected-item .option-container {
      .one-icon {
        left: 11px;
      }
      .one-icon + .text {
        padding-left: 2.2em;
      }
    }
    
    // a special style to render selector like text with selector decorations
    // on hover and active
    // implemented only for small, because large (normal) makes no graphical sense
    &.text-like {
      font-size: inherit;
      background: none;
      transition: none;
      margin-left: -$ember-power-select-option-small-padding-horizontal;
      border-color: transparent;
      @include vendor-prefix(box-shadow, none);
      &:hover {
        border-color: $input-border;
        @include box-shadow($control-box-shadow);
      }
      &.ember-power-select-trigger--active {
        border-color: $input-border-focus;
        @include box-shadow($control-box-shadow-focus);
        &[aria-expanded] {
          border-color: $input-border;
          @include box-shadow($control-box-shadow);
        }
      }
      .ember-power-select-status-icon {
        top: 0.35em;
      }
    }
  }
}

.small {
  &.ember-basic-dropdown-content, &.ember-power-select-trigger {
    // sometimes we used the icon container without option-container
    .inline-icon-container {
      width: 1.75em;
      margin-left: -0.1em;
    }
  }
}

.ember-power-select-trigger {
  padding-left: $ember-power-select-option-large-padding-horizontal;
  padding-right: 3em;
  transition: transition-ease(all);
  min-height: $line-height-computed + 2 * $padding-base-vertical + 2px;
  white-space: nowrap;
  outline: none !important;
  color: $main-text-color;

  &[aria-disabled=true] {
    background-color: $input-bg;
    opacity: 0.6;
    cursor: not-allowed;
  }

  &.ember-power-select-trigger--active:not([aria-expanded]) {
    @include box-shadow($control-box-shadow-focus);
    border: $ember-power-select-border-width solid $input-border-focus;
  }

  &.truncate {
    .ember-power-select-selected-item {
      .option-container {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }
    }
  }
  
  .form-group-sm & {
    @extend .small;
  }

  &.small, .form-group-sm & {
    padding: $ember-power-select-option-small-padding;
    padding-left: $ember-power-select-option-small-padding-horizontal;
    padding-right: 2em;
    min-height: $input-height-small;

    .one-icon {
      left: 0;
    }

    .one-icon + .text {
      padding-left: 34px;
    }

    .ember-power-select-status-icon {
      right: 1.7em;
      top: 0.45em;
      margin: initial;
      font-size: 1.1em;
      font-weight: bold;
      &:before {
        @include oneicon-content($oneicon-arrow-down);
      }
    }
  }

  .ember-power-select-status-icon {
    font-family: 'oneicons' !important;
    border: 0;
    transform: none;
    right: 1.7em;
    top: 0.55em;
    margin: initial;
    font-size: 1.7em;
    font-weight: bold;
    &:before {
      @include oneicon-content($oneicon-arrow-down);
    }
  }

  &:not([aria-expanded]) {
    @include box-shadow($control-box-shadow);
  }

  &[aria-expanded="true"] {
    .ember-power-select-status-icon {
      transform: none;
      &:before {
        @include oneicon-content($oneicon-arrow-up);
      }
    }
  }
}

.ember-power-select-dropdown {
  box-shadow: none;

  &.small, .form-group-sm & {
    .ember-power-select-option {
      padding: $ember-power-select-option-small-padding;
      min-height: 31px;
    }
  }

  &.over-popover-over-modals {
    z-index: $zindex-popover-over-modals + 1;
  }

  .ember-basic-dropdown-content {
    max-height: 250px;
  }

  .ember-power-select-option {
    border-bottom: $ember-power-select-border-width solid $input-border;
    padding: $padding-base-vertical;
    min-height: $line-height-computed + 2 * $padding-base-vertical;
    overflow: hidden;
    word-wrap: break-word;

    &[aria-disabled="true"] {
      pointer-events: auto;
    }

    &::last-child {
      border-bottom: 0;
    }
  }
  .ember-power-select-search-input {
    padding: 6px;
  }
}

.ember-power-select-search-input {
  border-radius: $input-border-radius;
  &:focus {
    outline: 0;
    border: $ember-power-select-border-width solid $input-border-focus;
  }
}

.dropdown-input .form-control-feedback {
  display: none;
}

.form-group {
  &.has-success {
    .ember-power-select-trigger:not([aria-expanded]) {
      border-color: $color-one-success;
    }
  }
  &.has-error {
    .ember-power-select-trigger:not([aria-expanded]) {
      border-color: $color-one-danger;
    }
  }
}

// Use this class, when some text should be inline with .text-like power-select-trigger
.text-with-power-select {
  $-padding-vertical: calc(#{$ember-power-select-option-small-padding-vertical} + #{$ember-power-select-border-width});
  line-height: $ember-power-select-line-height;
  padding-top: $-padding-vertical;
  padding-bottom: $-padding-vertical;
}
