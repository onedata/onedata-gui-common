// SCSS utils
$top-shadow-height: 6px;
$top-shadow-zindex: 1002;

@mixin fill-container() {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

@mixin -h-base-line($border-style) {
  content:"";
  position: absolute;
  height: 1px;
  border-top: $border-style;
  // below v line
  z-index: 0;
}

@mixin -v-base-line($border-style) {
  content:"";
  position: absolute;
  height: 100%;
  border-left: $border-style;
  // on top of h line
  z-index: 1;
}

@mixin top-line($border-style) {
  @include -h-base-line($border-style);
  top: 0;
  left: 0;
  right: 0;
}

@mixin bottom-line($border-style) {
  @include -h-base-line($border-style);
  bottom: 0;
  left: 0;
  right: 0;
}

@mixin left-line($border-style) {
  @include -v-base-line($border-style);
  top: 0;
  bottom: 0;
  left: 0;
}

@mixin vendor-prefix($name, $argument) {
  -webkit-#{$name}: #{$argument};
  -ms-#{$name}: #{$argument};
  -moz-#{$name}: #{$argument};
  -o-#{$name}: #{$argument};
  #{$name}: #{$argument};
}

@mixin horizontal-align-middle() {
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
}

@mixin vertical-align-middle() {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

@mixin absolute-align-middle-center() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateY(-50%) translateX(-50%);
}

@mixin fill-align-middle-center() {
  height: 100%;
  margin-left: auto;
  margin-right: auto;
}

// fits content horizontally to 100% or more of container
// must be put in another horizonatal-flex-stretch!
// see: https://css-tricks.com/boxes-fill-height-dont-squish/
@mixin vertical-flex-stretch {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
}

@mixin clickable() {
  cursor: pointer;
  @include vendor-prefix(user-select, none);
}

@mixin hide-before-shadow() {
  &::before {
    height: 0;
  }
}

@mixin hide-after-shadow() {
  &::after {
    width: 0;
  }
}

@mixin shadow-base($shadow-height: $top-shadow-height, $shadow-alpha: 0.05, $direction) {
  @if #{$direction} == #{to bottom} or #{$direction} == #{to top} {
    &::before {
      position: absolute;
      @if #{$direction} == #{to bottom} {
        top: -$shadow-height;
      }
      @if #{$direction} == #{to top} {
        bottom: -$shadow-height;
      }
      height: $shadow-height;
      background: linear-gradient($direction, transparent, rgba(0, 0, 0, $shadow-alpha));
      transition: height 0.2s linear;
      content: ' ';
      width: 100%;
      z-index: $top-shadow-zindex;
      left: 0;
      right: 0;
    }
  }
  @if #{$direction} == #{to left} or #{$direction} == #{to right} {
    &::after {
      position: absolute;
      @if #{$direction} == #{to left} {
        right: -$shadow-height;
      }
      @if #{$direction} == #{to right} {
        left: -$shadow-height;
      }
      width: $shadow-height;
      background: linear-gradient($direction, transparent, rgba(0, 0, 0, $shadow-alpha));
      transition: width 0.2s linear;
      content: ' ';
      height: 100%;
      z-index: $top-shadow-zindex;
      top: 0;
      bottom: 0;
    }
  }
}

@mixin before-top-shadow($shadow-height: $top-shadow-height, $shadow-alpha: 0.05) {
  @include shadow-base(
    $shadow-height: $shadow-height,
    $shadow-alpha: $shadow-alpha,
    $direction: to bottom,
  );
}

@mixin before-bottom-shadow($shadow-height: $top-shadow-height, $shadow-alpha: 0.05) {
  @include shadow-base(
    $shadow-height: $shadow-height,
    $shadow-alpha: $shadow-alpha,
    $direction: to top,
  );
}

@mixin after-left-shadow($shadow-height: $top-shadow-height, $shadow-alpha: 0.05) {
  @include shadow-base(
    $shadow-height: $shadow-height,
    $shadow-alpha: $shadow-alpha,
    $direction: to right,
  );
}

@mixin after-right-shadow($shadow-height: $top-shadow-height, $shadow-alpha: 0.05) {
  @include shadow-base(
    $shadow-height: $shadow-height,
    $shadow-alpha: $shadow-alpha,
    $direction: to left,
  );
}

@mixin hide-on-breakpoint($class-name, $max-width) {
  .#{$class-name} {
    @media (max-width: $max-width) {
      display: none;
    }
  }
}

@mixin bar-fog-style($gradient-direction, $fog-width, $fog-height, $color: white) {
  position: absolute;
  content: '';
  z-index: 1;
  top: 0;
  height: $fog-height;
  width: $fog-width;
  background: linear-gradient($gradient-direction, rgba($color, 0), $color 100%);
}
